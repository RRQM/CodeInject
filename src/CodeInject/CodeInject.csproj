<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
	  <!-- Development Dependencies Only -->
	  <DevelopmentDependency>true</DevelopmentDependency>
	  <IncludeSymbols>false</IncludeSymbols>
	  <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	  <!-- 配置为纯源生成器包，不生成dll -->
	  <IncludeBuildOutput>false</IncludeBuildOutput>
	  <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
	  <NoPackageAnalysis>true</NoPackageAnalysis>
	  <!-- Package metadata -->
	  <PackageOutputPath>$(SolutionDir)\Build\NugetPackages\Packages</PackageOutputPath>
	  <PackageIcon>logo.png</PackageIcon>
	  <PackageReadmeFile>README.md</PackageReadmeFile>
	  <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
	  <Description>A source generator for code injection that allows injecting code into methods, properties, and other code regions at compile time.</Description>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\CodeInjectSourceGenerator\CodeInjectSourceGenerator.csproj" PrivateAssets="all" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
  </ItemGroup>

	<ItemGroup>
		<None Include="tools\*.ps1" PackagePath="tools" Pack="true" Visible="false" />
		<None Include="..\CodeInjectSourceGenerator\bin\$(Configuration)\netstandard2.0\CodeInjectSourceGenerator.dll" PackagePath="analyzers\dotnet\cs" Pack="true" Visible="false" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<AssemblyOriginatorKeyFile>$(MSBuildProjectName).snk</AssemblyOriginatorKeyFile>
		<SignAssembly>True</SignAssembly>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\..\README.md" Link="README.md" Pack="true" PackagePath="\">
		</None>
		<None Include="LICENSE.txt">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
		<None Include="logo.png">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<Target Name="CopyNuGetPackage" AfterTargets="Pack">
		<Copy SourceFiles="$(PackageOutputPath)\$(PackageId).$(PackageVersion).nupkg"
              DestinationFolder="D:\Nuget\local"
              Condition="Exists('D:\Nuget\local')" />
	</Target>
</Project>
